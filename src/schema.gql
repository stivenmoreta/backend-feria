# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Sale {
  id: ID!
  name: String!
  paymentMethod: PaymentMethods!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""m√©todos de pagos validos para registrar una venta"""
enum PaymentMethods {
  efectivo
  transferencia
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TradeProduct {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  sales(offset: Int = 0, limit: Int = 10, fecha: DateTime, paymentMethod: PaymentMethods): [Sale!]!
}

type Product {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  tradeProducts(offset: Int = 0, limit: Int = 10, search: String): [TradeProduct!]!
}

type Category {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  products(offset: Int = 0, limit: Int = 10, search: String): [Product!]!
}

type Store {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  storeCount: Int!
  categories(offset: Int = 0, limit: Int = 10, search: String): [Category!]!
}

type User {
  id: ID!
  email: String!
  password: String!
  pnombre: String!
  snombre: String!
  apellidop: String!
  apellidom: String!
}

type Query {
  user(id: ID!): User!
  products(offset: Int = 0, limit: Int = 10, search: String): [Product!]!
  product(id: ID!): Product!
  tradeProducts: [TradeProduct!]!
  tradeProduct(id: Int!): TradeProduct!
  sales: [Sale!]!
  sale(id: Int!): Sale!
  stores(offset: Int = 0, limit: Int = 10, search: String): [Store!]!
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: ID!): Category!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createTradeProduct(createTradeProductInput: CreateTradeProductInput!): TradeProduct!
  updateTradeProduct(updateTradeProductInput: UpdateTradeProductInput!): TradeProduct!
  removeTradeProduct(id: Int!): TradeProduct!
  createSale(createSaleInput: CreateSaleInput!): Sale!
  updateSale(updateSaleInput: UpdateSaleInput!): Sale!
  removeSale(id: Int!): Sale!
  createStore(createStoreInput: CreateStoreInput!): Store!
  updateStore(updateStoreInput: UpdateStoreInput!): Store!
  removeStore(id: ID!): Store!
}

input UpdateUserInput {
  id: ID!
}

input CreateCategoryInput {
  """name category"""
  name: String!

  """id store"""
  storeId: ID!
}

input UpdateCategoryInput {
  """name category"""
  name: String

  """id store"""
  storeId: ID
  id: ID!
}

input CreateProductInput {
  """name product"""
  name: String!

  """categoryId product"""
  categoryId: ID!
}

input UpdateProductInput {
  """name product"""
  name: String

  """categoryId product"""
  categoryId: ID
  id: ID!
}

input CreateTradeProductInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTradeProductInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSaleInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSaleInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateStoreInput {
  """name store"""
  name: String!
}

input UpdateStoreInput {
  """name store"""
  name: String

  """store id"""
  id: ID!
}